{#
/**
 * @file
 * Default theme implementation to display a paragraph.
 *
 * Available variables:
 * - paragraph: Full paragraph entity.
 *   Only method names starting with "get", "has", or "is" and a few common
 *   methods such as "id", "label", and "bundle" are available. For example:
 *   - paragraph.getCreatedTime() will return the paragraph creation timestamp.
 *   - paragraph.id(): The paragraph ID.
 *   - paragraph.bundle(): The type of the paragraph, for example, "image" or "text".
 *   - paragraph.getOwnerId(): The user ID of the paragraph author.
 *   See Drupal\paragraphs\Entity\Paragraph for a full list of public properties
 *   and methods for the paragraph object.
 * - content: All paragraph items. Use {{ content }} to print them all,
 *   or print a subset such as {{ content.field_example }}. Use
 *   {{ content|without('field_example') }} to temporarily suppress the printing
 *   of a given child element.
 * - attributes: HTML attributes for the containing element.
 *   The attributes.class element may contain one or more of the following
 *   classes:
 *   - paragraphs: The current template type (also known as a "theming hook").
 *   - paragraphs--type-[type]: The current paragraphs type. For example, if the paragraph is an
 *     "Image" it would result in "paragraphs--type--image". Note that the machine
 *     name will often be in a short form of the human readable label.
 *   - paragraphs--view-mode--[view_mode]: The View Mode of the paragraph; for example, a
 *     preview would result in: "paragraphs--view-mode--preview", and
 *     default: "paragraphs--view-mode--default".
 * - view_mode: View mode; for example, "preview" or "full".
 * - logged_in: Flag for authenticated user status. Will be true when the
 *   current user is a logged-in member.
 * - is_admin: Flag for admin user status. Will be true when the current user
 *   is an administrator.
 *
 * @see template_preprocess_paragraph()
 *
 * @ingroup themeable
 */
#}
{%
  set classes = [
    '',
    'paragraph',
    'paragraph--type--' ~ paragraph.bundle|clean_class,
    view_mode ? 'paragraph--view-mode--' ~ view_mode|clean_class,
    not paragraph.isPublished() ? 'paragraph--unpublished'
  ]
%}
{% block paragraph %}

  <!-- cta part start-->
  <section class="cta_part">
    <div class="container">
      <div class="row align-items-center">
        <div class="col-lg-12">
          <div class="cta_part_iner">
            <div class="cta_part_text">
              <p>{{ subtitle }}</p>
              <h2>{{ headline }}</h2>
            </div>
          </div>
        </div>
      </div>
    </div>
  </section>
  <!-- cta part end-->
  <!-- team_member part start-->
  <section class="team_member_section section_padding">
    <div class="container">
      <div class="row">
        {% for member in members %}
          <div class="col-lg-4 col-sm-6">
            <div class="single_team_member">
              <img src="{{ member.photo.image_url }}" alt="{{ member.photo.image_alt ~ member.photo.image_title }}">
              <div class="single_team_text">
                <h3><a href="#">{{ member.name }}</a></h3>
                <p>{{ member.position_title }}</p>
                <div class="team_member_social_icon">
                  {% for social_network in member.social_networks %}
                    <a href="{{ social_network.link_url }}">{{ social_network.link_title }}</a>
                  {% endfor %}
                </div>
              </div>
            </div>
          </div>
        {% endfor %}
      </div>
    </div>
  </section>
  <!-- team_member part end-->

{% endblock paragraph %}
